{
  "paragraphs": [
    {
      "text": "%python.ipython\n\nimport logging\nimport random\nimport string\nimport requests\nimport re\nimport pandas as pd\nimport numpy as np\nimport time\nfrom tqdm import tqdm\n\nfrom cassandra import ConsistencyLevel\nfrom cassandra.cluster import Cluster\nfrom cassandra.query import SimpleStatement\n\nKEYSPACE = \"gdelt_prod\"\ncluster = Cluster(['192.168.3.74'])\nsession = cluster.connect()\nsession.set_keyspace(KEYSPACE)\n\nresponse = requests.get('http://data.gdeltproject.org/gdeltv2/masterfilelist.txt', allow_redirects=True)\ntext = response.content.decode()\n\ndf = pd.DataFrame(re.split(\" |\\n\", text), columns=[\"champs\"])\ndf[\"zip\"] = df[\"champs\"].apply(lambda x: 1 if \".zip\" in x else \"\")\ndf = df[df[\"zip\"] == 1]\ndf[\"date\"] = df[\"champs\"].apply(lambda x: re.findall(\"2\\d+\", x)[0])\ndf[\"date\"] = df[\"date\"].astype(int)\n\ndf = df.groupby('date').sum()\ndf = df[df[\"zip\"]==3]\ndf = df.drop(['champs','zip'],axis=1)\n\ndf['nb_articles_events'] = \"NA\"\ndf['countries_events'] = \"NA\"\ndf['data_source'] = \"NA\"\ndf['relationship'] = \"NA\"\n\n\ndf['status'] = \"pending\"\ndf['date'] = df.index\n\n\nstarting_date = 20210000000000\nending_date   = 20220101000000\ndf = df[(df[\"date\"] >= starting_date)]# & (df[\"date\"] <= ending_date)]\n\n",
      "user": "anonymous",
      "dateUpdated": "2022-02-10T14:35:00+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 88,
              "optionOpen": false
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1643984627739_504827098",
      "id": "paragraph_1643931652209_1250417162",
      "dateCreated": "2022-02-04T14:23:47+0000",
      "dateStarted": "2022-02-10T14:35:00+0000",
      "dateFinished": "2022-02-10T14:35:10+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:105"
    },
    {
      "text": "%python.ipython\ndef fetch_prod_dates(session):\n    dates = []\n    try:\n        rows = session.execute('SELECT date FROM importstatus')\n        for idx, user_row in enumerate(rows):\n            dates.append(user_row.date)\n            \n    except Exception as e:\n        print(e)\n        print(statement)\n    return pd.DataFrame(dates,columns=['date'])\n\ndef fetch_gdelt_dates():\n    response = requests.get('http://data.gdeltproject.org/gdeltv2/masterfilelist.txt', allow_redirects=True)\n    text = response.content.decode()\n    df = pd.DataFrame(re.split(\" |\\n\", text), columns=[\"champs\"])\n    df[\"zip\"] = df[\"champs\"].apply(lambda x: 1 if \".zip\" in x else \"\")\n    df = df[df[\"zip\"] == 1]\n    df[\"date\"] = df[\"champs\"].apply(lambda x: re.findall(\"2\\d+\", x)[0])\n    df[\"date\"] = df[\"date\"].astype(int)\n    \n    df = df.groupby('date').sum()\n    df = df[df[\"zip\"]==3]\n    df = df.drop(['champs','zip'],axis=1)\n    df = df.reset_index(drop=False)\n    starting_date = 20210000000000\n    df = df[(df[\"date\"] >= starting_date)]\n    \n    return df\n    \ndef SQL_INSERT_STATEMENT_FROM_DATAFRAME(SOURCE, TARGET):\n        sql_texts = []\n        for index, row in SOURCE.iterrows():\n            stat = 'INSERT INTO '+TARGET+' ('+ str(', '.join(SOURCE.columns))+ ') VALUES '+ str(tuple(row.values)).replace('\\\"{\\'',\"{'\")\n            stat = stat.replace(\"\\'}\\\"\",\"\\'}\")\n            sql_texts.append(stat)\n        return sql_texts\n\ndef get_new_dates(session,FirstTime):\n    df_diff = pd.concat([fetch_prod_dates(session),fetch_gdelt_dates()])['date'].drop_duplicates(keep=FirstTime)\n    new_dates = pd.DataFrame(df_diff,columns=['date'])\n    new_dates['nb_articles_events'] = \"NA\"\n    new_dates['countries_events'] = \"NA\"\n    new_dates['data_source'] = \"NA\"\n    new_dates['relationship'] = \"NA\"\n    \n    new_dates['status'] = \"td\"\n    return new_dates\n",
      "user": "anonymous",
      "dateUpdated": "2022-02-10T14:36:27+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1644414606607_534586789",
      "id": "paragraph_1644414606607_534586789",
      "dateCreated": "2022-02-09T13:50:06+0000",
      "dateStarted": "2022-02-10T14:36:27+0000",
      "dateFinished": "2022-02-10T14:36:27+0000",
      "status": "FINISHED",
      "$$hashKey": "object:106"
    },
    {
      "text": "%python.ipython\n\nfirstTime = False # 'first' \nnew_dates = get_new_dates(session,firstTime)\nnew_dates\n",
      "user": "anonymous",
      "dateUpdated": "2022-02-10T14:41:00+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 444,
              "optionOpen": false
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>date</th>\n      <th>nb_articles_events</th>\n      <th>countries_events</th>\n      <th>data_source</th>\n      <th>relationship</th>\n      <th>status</th>\n    </tr>\n  </thead>\n  <tbody>\n  </tbody>\n</table>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1644503721112_521499099",
      "id": "paragraph_1644503721112_521499099",
      "dateCreated": "2022-02-10T14:35:21+0000",
      "dateStarted": "2022-02-10T14:41:00+0000",
      "dateFinished": "2022-02-10T14:41:06+0000",
      "status": "FINISHED",
      "$$hashKey": "object:107"
    },
    {
      "text": "%python.ipython\n\nnew_dates = get_new_dates(session,False)\nnew_dates\n\nSQL_test = SQL_INSERT_STATEMENT_FROM_DATAFRAME(new_dates.fillna('null'), 'importstatus')\n\nfor statement in SQL_test:\n    try:\n        print(statement+' IF NOT EXISTS')\n        #session.execute(statement)\n    except Exception as e:\n        print(e)\n        continue\n    ",
      "user": "anonymous",
      "dateUpdated": "2022-02-10T14:33:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "INSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208183000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208184500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208190000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208191500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208193000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208194500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208200000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208201500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208203000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208204500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208210000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208211500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208213000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208214500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208220000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208221500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208223000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208224500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208230000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208231500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208233000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220208234500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209000000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209001500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209003000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209004500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209010000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209011500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209013000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209014500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209020000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209021500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209023000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209024500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209030000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209031500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209033000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209034500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209040000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209041500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209043000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209044500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209050000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209051500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209053000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209054500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209060000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209061500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209063000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209064500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209070000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209071500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209073000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209074500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209080000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209081500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209083000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209084500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209090000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209091500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209093000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209094500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209100000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209101500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209103000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209104500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209110000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209111500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209113000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209114500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209120000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209121500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209123000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209124500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209130000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209131500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209133000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209134500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209140000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209141500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209143000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209144500, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\nINSERT INTO importstatus (date, nb_articles_events, countries_events, data_source, relationship, status) VALUES (20220209150000, 'NA', 'NA', 'NA', 'NA', 'td') IF NOT EXISTS\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1644417890805_1065946233",
      "id": "paragraph_1644417890805_1065946233",
      "dateCreated": "2022-02-09T14:44:50+0000",
      "dateStarted": "2022-02-09T15:02:34+0000",
      "dateFinished": "2022-02-09T15:02:34+0000",
      "status": "FINISHED",
      "$$hashKey": "object:108"
    },
    {
      "text": "%python.ipython\nnew_dates = pd.DataFrame(df_diff,columns=['date'])\nnew_dates['nb_articles_events'] = \"NA\"\nnew_dates['countries_events'] = \"NA\"\nnew_dates['data_source'] = \"NA\"\nnew_dates['relationship'] = \"NA\"\nnew_dates['status'] = \"td\"\nnew_dates",
      "user": "anonymous",
      "dateUpdated": "2022-02-10T14:32:13+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>date</th>\n      <th>nb_articles_events</th>\n      <th>countries_events</th>\n      <th>data_source</th>\n      <th>relationship</th>\n      <th>status</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>239055</th>\n      <td>20220208183000</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>td</td>\n    </tr>\n    <tr>\n      <th>239056</th>\n      <td>20220208184500</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>td</td>\n    </tr>\n    <tr>\n      <th>239057</th>\n      <td>20220208190000</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>td</td>\n    </tr>\n    <tr>\n      <th>239058</th>\n      <td>20220208191500</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>td</td>\n    </tr>\n    <tr>\n      <th>239059</th>\n      <td>20220208193000</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>td</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>239132</th>\n      <td>20220209134500</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>td</td>\n    </tr>\n    <tr>\n      <th>239133</th>\n      <td>20220209140000</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>td</td>\n    </tr>\n    <tr>\n      <th>239134</th>\n      <td>20220209141500</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>td</td>\n    </tr>\n    <tr>\n      <th>239135</th>\n      <td>20220209143000</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>td</td>\n    </tr>\n    <tr>\n      <th>239136</th>\n      <td>20220209144500</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>NA</td>\n      <td>td</td>\n    </tr>\n  </tbody>\n</table>\n<p>82 rows × 6 columns</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1644417058065_1248712595",
      "id": "paragraph_1644417058065_1248712595",
      "dateCreated": "2022-02-09T14:30:58+0000",
      "dateStarted": "2022-02-09T14:47:17+0000",
      "dateFinished": "2022-02-09T14:47:17+0000",
      "status": "FINISHED",
      "$$hashKey": "object:109"
    },
    {
      "text": "%python.ipython\n\ndef fetch_and_mark_data(session, amount : int ):\n    dates = []\n    try:\n        rows = session.execute('SELECT date FROM importstatus WHERE status = \\'TD\\' ALLOW FILTERING')\n        for idx, user_row in enumerate(rows):\n            dates.append(user_row.date)\n            statement = f'UPDATE importstatus SET status = \\'doing\\'   WHERE date = {user_row.date} IF EXISTS'\n            session.execute(statement )\n            if idx  >amount-2:\n                break\n            \n    except Exception as e:\n        print(e)\n        print(statement)\n    \n    return dates\n    \nto_import = fetch_and_mark_data(session, 5 )  ",
      "user": "anonymous",
      "dateUpdated": "2022-02-10T14:41:32+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1644238877412_962389960",
      "id": "paragraph_1644238877412_962389960",
      "dateCreated": "2022-02-07T13:01:17+0000",
      "dateStarted": "2022-02-07T13:29:28+0000",
      "dateFinished": "2022-02-07T13:29:28+0000",
      "status": "FINISHED",
      "$$hashKey": "object:110"
    },
    {
      "text": "%python.ipython\n\ndef make_df(to_import):\n    df = pd.DataFrame(to_import,columns =['date'])\n    df['events'] = df['date'].apply(lambda x:'http://data.gdeltproject.org/gdeltv2/'+str(x)+'.export.CSV.zip' )\n    df['mentions'] = df['date'].apply(lambda x:'http://data.gdeltproject.org/gdeltv2/'+str(x)+'.mentions.CSV.zip' )\n    df['gkg'] = df['date'].apply(lambda x:'http://data.gdeltproject.org/gdeltv2/'+str(x)+'.gkg.csv.zip' )\n    df.set_index('date')\n    return df\n    \nto_import = make_df(to_import).head()",
      "user": "anonymous",
      "dateUpdated": "2022-02-07T14:06:34+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1644238967464_932303947",
      "id": "paragraph_1644238967464_932303947",
      "dateCreated": "2022-02-07T13:02:47+0000",
      "dateStarted": "2022-02-07T14:06:34+0000",
      "dateFinished": "2022-02-07T14:06:34+0000",
      "status": "FINISHED",
      "$$hashKey": "object:111"
    },
    {
      "text": "%python.ipython\ndef update_status(lower_lim , upper_lim):\n    try:\n        rows = session.execute('SELECT date FROM importstatus WHERE status = \\'pending\\' ALLOW FILTERING')\n        for idx, user_row in enumerate(rows):\n            if lower_lim < user_row.date and user_row.date < upper_lim:\n                statement = f'UPDATE importstatus SET status = \\'td\\'   WHERE date = {user_row.date} IF EXISTS'\n                session.execute(statement )\n    except Exception as e:\n        print(e)\n        print(statement)\n        \n       \nupdate_status(20210600000000 ,20230000000000)        \n    ",
      "user": "anonymous",
      "dateUpdated": "2022-02-10T14:34:47+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 11,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 164.547,
              "optionOpen": false
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1644240539610_1184846912",
      "id": "paragraph_1644240539610_1184846912",
      "dateCreated": "2022-02-07T13:28:59+0000",
      "dateStarted": "2022-02-08T22:22:13+0000",
      "dateFinished": "2022-02-08T22:22:18+0000",
      "status": "FINISHED",
      "$$hashKey": "object:112"
    }
  ],
  "name": "Status Updater",
  "id": "2GU99XASB",
  "defaultInterpreterGroup": "python",
  "version": "0.10.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/Status Updater"
}